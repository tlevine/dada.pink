[[meta title="Tom Computer School"]]
[[meta description="I formalize my views on learning computer stuff."]]

I want to run Tom's Computer School at your hackerspace or school or
wherever. Or maybe even over the internet, if we can't do in person.
Here's how it will work.

## How Tom thinks you should learn computers
I think you should do whatever you feel like and learn just enough
computer things as it seems relevant. Here is a
[related writing](/!/learn-computers-through/).
I can assist you at this in a few ways.

* Telling you what to learn
* Explaining things that you couldn't find elsewhere

The closest thing to this that I have done is the class on
[switching to command line](/!/switching-to-command-line/) that I gave
at [OpenLabs](http://openlabs.cc)

## Daily schedule
We'll gather in whatever place we gather in for a few hours each day.
The exact times don't matter that much to me. Let's say that the day
is from 10 am to 5 pm.

We will allocate 10 am to 11 am for talks, but they won't happen every day.
The topics of talks might have something to do with the questions that I get
in the ten-minute meetings that I haven't yet told you about.

We'll have a two-hour break from 12 pm to 2 pm for lunch and napping
and whatnot. At the beginning of this break, we'll have an optional game
where we can [run around and learn computer things](/!/real-world-algorithms/).
(We might also take one full day off of the normal schedule to play the games
that need to be played in a corn maze or a hilly area.)

Each student will have a meeting of ten minutes with me every day.
The student use this meeting to ask me questions.
Since it's only ten minutes per
day, students are better off finding answers in other places if they
can, like from websites, books, and videos. This meeting will be a bit
different on the first day, as I discuss below.

My responses to the questions I get during the meetings are likely to sound
like one of the following.

* Search the internet for a particular topic, (I'll tell you the topic that
    is relevant to your question.) and follow the directions that you get.
* Ask me something simpler so I don't have to think so hard.
* Here is a link to a web page that answers your question.
* I couldn't find anything on the internet that would answer your question
    easily, so I might eventually write something about it and send that to you.

At the end of the day, we'll have a meeting where everyone verbally reports
what she or he did that day. The report must be limited to ten seconds.
If we have too many students for such a meeting, we'll do this in writing,
and the reports will be limited to one complex sentence or two simple sentences.

### First day
As mentioned above, the ten-minute meetings will run a bit differently on
the first day.

If you have an idea of a computer thing that you want to make or learn,
we will discuss that thing, and I will tell you which aspects to do/learn
first, based on your background and what you want to do.


If you don't have much of an idea, I will decide for you, based on your
background and on the things that you do day to day. It will probably be one
of the following.

* Use vim or emacs for something that you already do with other software.
* Use the shell for something that you already do without the shell.
* Configure and use a nice email client (pine, mh, mutt, &c.) or some related
    email thing, maybe for searching (notmuch), filtering (postfix, imapfilter, &c).
* Learn to copy files between computers.

My reasoning is explained in that OpenLabs talk notes.

Given how involved these discussions may get, I will probably be okay with
the first day's meetings running beyond ten minutes.

You can, of course, ask for this sort of advice later in the school; I am
just deciding that this what we're going to talk about on the first day.
