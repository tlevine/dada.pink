tags: ['sharing']
------------
# Geeky free software project
[Redon](http://skikuli.com) asked me to present a "geeky open source
(and free software culture) related project [I] have done". This request
seemed a bit odd at first because pretty much everything I do could be
seen as related to free software/culture. So I decided that everything is
a huge meta-project about exploring outrageous degrees of freedom.

Let's break this into three things.

1. Cool things happen because people share information with me.
2. Cool happen I can do because I share information.
3. The interesting part about free software/culture is simple sharing.

## People share with me
Nice things happen when it's easy to exchange things and information.
When something is simple enough to figure out or is complicated but
comes with good documentation, I can use it easily. When something is
complicated but follows a standard, I might not even need the
documentation because I might already know how it works.

I use software that other people made all the time. I also use houses
and buses and clothes that other people made. In either case, it's
easiest when the things follow conventions, when the things are
inexpensive and easy to get, and when I have permission to use the things.
A particularly neat aspect of free software is that you can usually install
it quite easily with a package manager.

I design my computer systems to be simple and standard so that I don't
need to remember how they work. I package my computer things in standard
packaging ways so that I don't even have to remember how to install
things. In fact, I don't even have to keep backups because other people
keep backups for me! I even have a
[program that lists what programs I've made](https://pypi.python.org/pypi/tlevine).

I am very relucant to learn new things, so I only do that when I know
that what I learn will stay useful. That is, I only spend much time learning
computer software if it is stable, good, and free.

If you want to learn computer and don't have a particular reason to,
I think you should learn
[these computer things](/!/what-programming-to-learn/).

<dl>
<dt>How to write things</dt>
<dd>emacs, vim, or text manipulation in shell</dd>
<dt>Better than DropBox</dt>
<dd>basics of scp, sftp, or rsync</dd>
<dt>Maybe some good email programs</dt>
<dd>mutt, pine, notmuch, mh, &c. (My <a href="/!/email/">email</a> setup is very cool but presently not documented.)</dd>
</dl>

These 30-year-old programs are still better than everything else; that's
why people still use them!

## I share with people
I'm in a reasonably strange situation wherein I'm not worried about what
the government will do to me if it knows everything about me, so I feel
comfortable with posting tons of things publically on my website. There's

* [All](http://small.dada.pink) [sorts](http://big.dada.pink)
    of files I want to save
* [Some organized things I've written](http://thomaslevine.com)
* [Most of my calendar](http://small.dada.pink/schedule)

Two notable categories of things that aren't public are

* email, because it contains passwords and other people's personal information
* things restricted by contracts, like music I have bought

### Practical reasons for sharing everything you can
It is *so* much easier to store personal things publically.

* I don't need to remember passwords and the like.
* I can find the things with an ordinary web search
* I can send things to other people easily.
* I don't even have to send things to people; I can tell them vaguely what
    the thing is, and they can search for it!

I need a *really* good reason to convince me to store something privately;
when I put things publically, other people do the cataloging work for me!

### Facilitating communication
Simplicity of storage is only the beginning of the benefits of sharing
information. Consider some of the emails that I have recently sent.

    From: Thomas Levine
    To: (Some people)
    Subject: Buzz buzz buzz

    http://big.dada.pink/strata-2014.webm
    http://thomaslevine.com/!/buzz-buzz-buzz/

The body of the email is just links. Sending URLs rather than the content that
is at the URLs is actually far easier than sending the content; I don't have
to worry about whether I copied things properly, the files I send don't have to
be as large, and I don't have to tell people that they're allowed to share the
stuff I send them. If I
couldn't send URLs, I would probably develop something like a URL for indexing
my content privately and use that to select the content.

A lot of my emails are like the email above.
When I answer the same question multiple times, I start writing down the
answer so that I don't have to answer it again. That's what I did in the
next email.

    From: Thomas Levine
    To: (Someone)
    Subject: University fundraiser

    http://thomaslevine.com/!/university-fundraiser/ 

I had actually already written up this account of the fundraiser, but it
was tied up inside an email with some other private things, so I separated
the public bits and put them on my website right before sending the above email.

When my writings are already easy to find on the internet, I don't have to
worry about whether they contain private information; they clearly don't
contain private information, as I wouldn't have put them on the internet
if they did. This is part of why it's so easy to share the information.

If I have already written down the answer to a question and the answer is
on a public website that is easy to find, I'm very quick to respond when I
see the question on a mailing list.

    From: Thomas Levine
    To: NICAR-L@PO.MISSOURI.EDU
    Subject: Re: [NICAR-L] Tracking text-ish documents and the
      changes to documents over time

    I think that lots of people write the same script that you describe;
    here's my version.
    http://thomaslevine.com/!/wsync/

    Nowadays, I save the parsed HTTP response rather than just the body
    of the response.
    http://thomaslevine.com/!/web-sites-to-data-tables-in-depth/

    Either way, they get saved as files. These files will be quite similar,
    so you can save space with backup software that saves incremental changes
    in the files.
    http://obnam.org/

Also, my conversations get much more interesting when people read the
repetitive parts first. For example, here's an email that I sent someone
while sitting next to her and talking about teaching "data" stuff.

    From: Thomas Levine <_@thomaslevine.com>
    To: (Someone else)
    Subject: Data data

    Data and learning and cetera
    http://thomaslevine.com/!/why-i-like-hackerspaces/
    http://thomaslevine.com/datakind/
    http://thomaslevine.com/!/making-your-personal-website/
    http://thomaslevine.com/!/learning-data-stuff/
    http://thomaslevine.com/!/bits/
    
    There's some stuff I missed, so you might find the search box helpful.
    http://thomaslevine.com/ikiwiki.cgi?P=algorithm
    
    And I'm gonna go tag a bunch of these things with "learn" right now.
    http://thomaslevine.com/learn/
    
    Other things
    http://thomaslevine.com/stuff/
    http://small.dada.pink/whom-to-email/README
    http://small.dada.pink/dadawarehouse/README
    http://thomaslevine.com/!/sleeping/

I didn't have to remember all of that stuff I had written, so I only
had to talk about the parts that I hadn't written about and to listen
to the things that the other person had to say. Much more interesting,
and much less work!

### People already know me when they meet me
I noticed recently that people act like they have known me since forever
only shortly after meeting me. At first, I figured that this must be a
trick or that they must just act this way with everyone. But then I realized
that they really *did* know me because they had read all about me on the
internet! People do all of the work of getting to know me on the internet,
so meeting them becomes a lot less work for me; I get to learn about them,
and I don't have to tell them about me.

## On sharing
I use the word "sharing" because I think its meaning is a bit more
generic than any of the various open openness words, which are totally
meaningless. Consider the following, for example.

* "Open source" software is usually not copyleft.
* People talk about GitHub as if GitHub invented collaboration.
* "[something in open data is fucked](https://twitter.com/lifewinning/status/489712000055144449)"
* [Open data is all about the money](/!/open-data-is-all-about-money)

We only need the word "open" because the norm is "closed" in some strange
contexts. But "closed" wasn't always the norm, and calling things "open"
doesn't mean that the norm has changed.

Beyond the practical conveniences of sharing information, there's a
deeper benefit of shared information. I think that recognizing that
complicated things aren't magic gives me [agency](/!/why-i-like-hackerspaces/).

I think this relates to how I use computers. I don't really think of
them as a thing. They're just things that make my life easier. I get
computers to help me
[stay in touch with people](http://small.dada.pink/whom-to-email),
[study myself](http://small.dada.pink/dadawarehouse),
[study](/open-data)
[other](/!/wrist-cracking)
[things](/scarsdale), and
[remember things](http://small.dada.pink/schedule).

Other people make little modules and whatnot, and then I assemble them
to do whatever I feel like. I don't depend on someone else being able
to design something for me.

## Review

1. I don't really understand how my computers work; I use things that
    other people support, and I choose simple things so I don't have to
    remember how to use them.
2. Neat/funny things happen when I put lots of stuff on the internet.
3. All of these free and open words are very complicated, but I think
    the core of these various terms has something to do with sharing.
    Also, sharing is normal; people talk more about it in contexts where
    sharing is weird.
