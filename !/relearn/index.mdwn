[[!tag learn]]
title: Netwaves
description: 
This came out of the Bits and Sound workshop at Relearn.

## File formats
We can think of sound as series of air pressures; a wave (WAV) file
is sort of like a series of numerirc air pressure values.

We can think of image as a grid of lights; a netbpm (PPM, for example)
file is pretty much just a cartesian grid of colored pixels, where
each pixel's color is specified as a triplet of red, green, and blue values.

In an eight-bit wave file, each byte is the air pressure value for
a frame of audio. In a binary PPM file, each byte is the intensity
value for a particular color (red, green or blue) within a particular
pixel of the image.

## Color versus oscillation
I ran [this](http://small.dada.pink/netwaves/drums.py) to
produce a [file](http://small.dada.pink/netwaves/drums.ppm)
that looks like this when interpreted as ppm

XXX

and sounds like this when interpreted as an 8-bit wave file
played at 8000 hz.

XXX

Sound is expressed as oscillations in value, whereas perceived color
is expressed the average value in a particular region of the image.
A series of pixels of the same value is heard as silence, and the
same series of pixels is viewed as a solid color. The file above sounds
like a series of beeps, and the changes in visual color aren't really
noticable when the file is played as audio.

## Merging image and sound
Having noticed the above, I realized that it wouldn't be hard to make
a single file that acts both as arbitrary PPM and arbitrary wave.
I [combined](http://small.dada.pink/netwaves/join.py) the
[fms symphony](http://fms.csvsoundsystem.com) song with a picture of
[Augustin d'Hippone](https://fr.wikipedia.org/wiki/Augustin_d%E2%80%99Hippone).

![Augustin d'Hippone](http://small.dada.pink/netwaves/augustin.jpg)

I converted the song to 8-bit 8000hz wave and treated it as

The result sounds rather close
